#!/bin/bash

[ -f "$(which tgpt)" ] || exit 1
[ -f "$(which whisper)" ] || exit 1
[ -f "$(which whiptail)" ] || exit 1

TERM=ansi

audio_file="/tmp/vocalize.wav"
text_file="${audio_file%.wav}.txt"

play_audio() {
	clear
	printf "\033[8;40;100t"
	printf "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
	printf "\033[13C  ╔══════════════════════════╗\n"
	printf "\033[13C  ║     MPV Running...       ║\n"
	printf "\033[13C  ╚══════════════════════════╝\n"

	mpv --no-video --input-terminal=yes "$audio_file"
}

record_audio() {

	echo "Iniciando gravação do áudio. Pressione Cancel para interromper a gravação."
	arecord -f cd -t wav "$audio_file" >/dev/null 2>&1 &

	arecord_pid=$!

	whiptail --title "Gravação de Áudio" --yesno "A gravação está em andamento. Deseja salvar o áudio?" 10 50
	response=$?

	kill -SIGINT $arecord_pid

	# May God forgive this workaround
	mv "$audio_file" /tmp/aux.wav
	ffmpeg -i /tmp/aux.wav -ar 16000 "$audio_file"

	if [ $response -ne 0 ]; then
		echo "Gravação do áudio cancelada."
		rm -f "$audio_file"
		return 1
	fi

	return 0
}

save_audio() {
	file_name=$(whiptail --inputbox "Digite um nome para salvar o áudio:" 10 50 3>&1 1>&2 2>&3)

	if [ -z "$file_name" ]; then
		echo "Nome de arquivo inválido. Ação cancelada."
		return
	fi

	cp "$audio_file" "$HOME/$file_name.wav"
	echo "O arquivo foi copiado para: $HOME/$file_name"
}

open_transcribed_audio() {
	whiptail --title "Vocalize" --scrolltext --textbox "$text_file" 12 80
}

remove_transcribed_audio() {
	rm -f "$text_file"
	whiptail --title "Vocalize" --msgbox "Texto removido!" 12 80
}

save_transcribed_audio() {
	file_name=$(whiptail --inputbox "Digite um nome para salvar o arquivo:" 10 50 3>&1 1>&2 2>&3)

	if [ -z "$file_name" ]; then
		echo "Nome de arquivo inválido. Ação cancelada."
		return
	fi

	cp "$text_file" "$HOME/$file_name.txt"
	echo "O arquivo foi copiado para: $HOME/$file_name"
}

transcribe_audio() {
	whiptail --title "Vocalize" --infobox "Transcrevendo o audio, aguarde..." 12 80
	whisper -f "$audio_file" \
		-l pt \
		-np \
		-m ~/Packages/whisper.cpp/models/ggml-base.bin \
		-otxt \
		-of "${text_file%.txt}"
	# God...
	open_transcribed_audio
}

while true; do
	if [ -f "$audio_file" ] && [ ! -f "$text_file" ]; then
		menu_choices=("Gravar" "Excluir Áudio" "Ouvir" "Salvar" "Transcrever(experimental)")
	elif [ -f "$audio_file" ] && [ -f "$text_file" ]; then
		menu_choices=("Gravar" "Excluir Áudio" "Ouvir" "Salvar Áudio"
			"Abrir Transcrição(experimental)"
			"Salvar Transcrição(experimental)"
			"Excluir Transcrição(experimental)")
	else
		menu_choices=("Gravar")
	fi

	menu_options=()
	for choice in "${menu_choices[@]}"; do
		menu_options+=("$choice" "")
	done

	chosen_option=$(whiptail --title "Vocalize" --menu "Escolha uma opção:" 15 40 8 "${menu_options[@]}" 3>&1 1>&2 2>&3)

	case $chosen_option in
	"Gravar")
		record_audio
		;;
	"Excluir Áudio")
		rm -f "$audio_file"
		whiptail --title "Vocalize" --msgbox "Arquivo removido!" 12 80
		;;
	"Ouvir")
		play_audio
		;;
	"Salvar")
		save_audio
		;;
	"Abrir Transcrição(experimental)")
		open_transcribed_audio
		;;
	"Salvar Transcrição(experimental)")
		save_transcribed_audio
		;;
	"Excluir Transcrição(experimental)")
		remove_transcribed_audio
		;;
	"Transcrever(experimental)")
		transcribe_audio
		;;
	*)
		echo "Operação cancelada"
        clear
		break
		;;
	esac
done
